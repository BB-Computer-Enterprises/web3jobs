{"version":3,"sources":["config/constants.js","lib/api.js","lib/database/dbCommon.js","lib/database/dbCompanies.js","lib/database/dbPostAJob.js","util/sanitize.js","util/genLinks.js","util/loading.js","util/genListIcon.js","util/daysElapsed.js","util/genTagsUrl.js","components/Footer.js","lib/database/dbTags.js","components/Header.js","components/pages/AboutPage.js","components/PageContainer.js","components/pages/AllCompaniesPage.js","components/JobsList.js","components/pages/AllJobsPage.js","lib/database/dbJobs.js","components/pages/CompanyPage.js","components/pages/NotFoundPage.js","components/pages/PostAJobPage.js","components/pages/JobItemPage.js","config/routes.js","components/pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["JOBS_TABLE","process","CONTACT","CONTACT_URL","COMPANY_TABLE","JOB_DATE_POSTED","JOB_TAGS","COMPANY_ID","COMPANY_NAME","COMPANY_URL","COMPANY_FEATURED","COMPANIES_URL","COMPANY_PAGE_URL","JOBS_URL","JOB_PAGE_URL","JOB_TAG_URL","POST_A_JOB_URL","TIER_FREE","TIER_POPULAR","TIER_SPENCY","allStyles","FEATURED_STYLE","FEATURED_TEXT_STYLE","REGULAR_TEXT_STYLE","REGULAR_STYLE","supabase","createClient","getAll","table","from","select","getAllJobsAndLinkedCompanies","getAllCompanies","postAJob","jobData","planTier","priceSelection","jobDescription","description","contactEmail","companyName","jobTitle","applicationURL","planPrice","insert","makeFriendlyUrl","name","toLowerCase","replace","genLinks","linkData","style","map","data","to","path","className","linkText","genFooterLink","loading","class","genListIcon","src","alt","isFeatured","daysElapsed","start","date1","Date","diffInTime","getTime","Math","round","genTagsUrl","tag","genTags","allTags","tagsArray","getTagsFromObject","tagData","genTagData","returnMe","key","push","innerHTMLDiv","tagsFromDB","rows","length","tagLinksData","i","end","segment","slice","genColumnData","tags","tgTxt","word","charAt","toUpperCase","genLinkText","sectionItems","item","navigation","support","href","company","legal","social","icon","props","fill","viewBox","d","fillRule","clipRule","Footer","useState","setTags","setError","useEffect","getTagsFromDB","catch","console","error","a","linkStyle","Header","AboutPage","PageContainer","content","title","subtitle","AllCompaniesPage","companies","setCompanies","featuredCompanies","setFeaturedCompanies","errorText","isLoading","setIsLoading","fetchCompanies","order","ascending","not","is","featuredError","generateLinkURL","cName","genCompanies","companyData","pathname","state","job","id","sepratetags","JobsList","jobs","getCompany","AllJobsPage","passedInTag","setJobs","fetchJobs","parseURLForTag","sectioned","location","split","lastItem","cs","CompanyPage","linkedJobs","cDesc","cUrl","cId","getJobs","companyId","match","freeFeatures","mostPopular","spencyFeatures","buttonStyles","selectedButton","paymentOptions","formik","feature","values","onClick","updatePriceTier","setFieldValue","value","popOver","show","setShow","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","PostAJobPage","putDataIntoDB","initialValues","validationSchema","Yup","email","required","min","onSubmit","resetForm","handleSubmit","htmlFor","type","autoComplete","touched","errors","getFieldProps","placeholder","getContent","JobItemPage","jTitle","jDesc","cAppUrl","routes","component","setEmail","event","preventDefault","formName","formEmail","formMessage","fetch","method","headers","body","JSON","stringify","then","result","log","err","onChange","e","target","App","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ef5178f.chunk.js","sourcesContent":["export const REACT_APP_SUPABASE_URL = process.env.REACT_APP_SUPABASE_URL;\r\nexport const REACT_APP_SUPABASE_KEY = process.env.REACT_APP_SUPABASE_KEY;\r\nexport const CONTACT = process.env.CONTACT;\r\nexport const CONTACT_URL = process.env.CONTACT_URL;\r\n\r\n// Database tables\r\nexport const JOBS_TABLE = 'jobs';\r\nexport const COMPANY_TABLE = 'companies';\r\nexport const POST_JOB_TABLE = 'postAJob';\r\nexport const PRICE_TABLE = 'pricing';\r\n\r\n// Database Jobs Table\r\nexport const JOB_ID = 'jobId';\r\nexport const JOB_DATE_POSTED = 'jobDatePosted';\r\nexport const JOB_TITLE = 'jobTitle';\r\nexport const JOB_LOCATION = 'location';\r\nexport const JOB_DESCRIPTION = 'jobDescription';\r\nexport const JOB_TAGS = 'jobTags';\r\n\r\n// Database Companies Table\r\nexport const COMPANY_ID = 'cId';\r\nexport const COMPANY_DESCRIPTION = 'cDescription';\r\nexport const COMPANY_EMAIL = 'cEmail';\r\nexport const COMPANY_NAME = 'cName';\r\nexport const COMPANY_URL = 'cUrl';\r\nexport const COMPANY_APPLICATION_URL = 'cApplicationUrl';\r\nexport const COMPANY_FEATURED = 'cFeatured';\r\nexport const COMPANY_ICON_URL = 'cIconUrl';\r\n\r\n// Database Tags Table\r\nexport const TAGS_TABLE = 'tags';\r\nexport const TAGS_ID = 'tagId';\r\nexport const TAGS_NAME = 'tagName';\r\n\r\n// Database Post A Job Table\r\nexport const POST_EMAIL = 'contactEmail';\r\nexport const POST_COMPANY_NAME = 'companyName';\r\nexport const POST_JOB_TITLE = 'jobTitle';\r\nexport const POST_DESCRIPTION = 'jobDescription';\r\nexport const POST_APP_URL = 'applicationUrl';\r\nexport const POST_APP_EMAIL = 'applicationEmail';\r\nexport const POST_PLAN_TIER = 'planTier';\r\nexport const POST_PLAN_PRICE = 'planPrice';\r\n\r\n// URL PATHS\r\nexport const COMPANIES_URL = '/web3-companies'\r\nexport const COMPANY_PAGE_URL = `${COMPANIES_URL}/:cname`\r\nexport const JOBS_URL = '/web3-jobs'\r\nexport const JOB_PAGE_URL = `${JOBS_URL}/:jtitle-:cname/:jid`\r\nexport const JOB_TAG_URL = `${JOBS_URL}/:jtag-jobs`\r\nexport const POST_A_JOB_URL = '/post-web3-job'\r\nexport const ABOUT_URL = '/about-web3-jobs'\r\n\r\n// Nav Bar Link Text\r\nexport const HOME_LINK = 'Home'\r\nexport const COMPANIES_LINK = 'Companies'\r\nexport const JOBS_LINK = 'Jobs'\r\nexport const POST_JOB_LINK = 'Post A Job'\r\n\r\n// Page titles and subtitles\r\nexport const COMPANIES_PAGE_TITLE = 'Web3 Companies'\r\nexport const COMPANIES_PAGE_SUBTITLE = 'Subtitle text is cool shittttttttt'\r\nexport const ALL_JOBS_PAGE_TITLE = 'Web3 Jobs'\r\nexport const ALL_JOBS_PAGE_SUBTITLE = 'Jobs Subtitle text is cool shittttttttt'\r\n\r\n// Price tier\r\nexport const TIER_FREE = 'freeTier';\r\nexport const TIER_POPULAR = 'popularTier';\r\nexport const TIER_SPENCY = 'spencyTier';\r\n\r\n// Card styles\r\nconst allStyles = \"border-b-2 border-white transform transition duration-500 bg-opacity-95 block px-8 py-2\";\r\nconst h1featureStyle = 'font-medium text-3xl lg:text-2xl'\r\nexport const FEATURED_STYLE = `bg-featured hover:scale-105 hover:bg-red-800 ${allStyles}`;\r\nexport const FEATURED_TEXT_STYLE =` text-lightyellows  ${h1featureStyle}`\r\nexport const REGULAR_TEXT_STYLE =` font-medium text-2xl lg:text-2xl text-indigo`\r\n\r\nexport const REGULAR_STYLE = `text-indigo-600 text-white hover:bg-gray-lightest ${allStyles}`\r\n\r\n","import { createClient } from \"@supabase/supabase-js\";\r\nimport { REACT_APP_SUPABASE_URL, REACT_APP_SUPABASE_KEY} from \"@constants/\";\r\n\r\nexport const supabase = createClient(\r\n    REACT_APP_SUPABASE_URL,\r\n    REACT_APP_SUPABASE_KEY\r\n);","import { supabase } from \"../api\";\r\nimport {\r\n    JOBS_TABLE,\r\n    COMPANY_TABLE\r\n} from \"@constants/\";\r\n\r\n/**\r\n * function to get all from the Table passed in\r\n * @param table - Table to pull from!\r\n * @returns Array full of all objects from the given table\r\n */\r\nexport const getAll = table => {\r\n    return supabase\r\n        .from(table)\r\n        .select(\"*\");\r\n}\r\n\r\n/**\r\n * function to get all jobs AND the company associated with it\r\n * @returns Array with all Jobs + Company linked to them\r\n */\r\n export const getAllJobsAndLinkedCompanies = () => {\r\n    return supabase\r\n        .from(JOBS_TABLE)\r\n        .select(`\r\n        *,\r\n        ${COMPANY_TABLE}(\r\n            *\r\n        )\r\n    `);\r\n}","import { getAll, getAllJobsAndLinkedCompanies } from './dbCommon';\r\nimport {\r\n    COMPANY_ID,\r\n    COMPANY_NAME,\r\n    COMPANY_TABLE,\r\n    COMPANY_FEATURED\r\n} from \"@constants/\";\r\n\r\n//*********COMPANIES SECTION\r\n\r\n/**\r\n * function to get all the companies\r\n * @returns Array full of all company objects\r\n */\r\nexport const getAllCompanies = () => {\r\n    return getAll(COMPANY_TABLE);\r\n}\r\n\r\n/**\r\n * function to get all the companies in alphabetic order: A-Z\r\n * @returns Array full of all company objects\r\n */\r\nexport const getAllCompaniesInAlphabetic = () => {\r\n    return getAllCompanies().order(COMPANY_NAME, { ascending: true }).not(COMPANY_FEATURED, 'eq', true);\r\n}\r\n\r\n/**\r\n * function to get the companies that are featured\r\n * @returns Array full of all company objects\r\n */\r\n export const getFeaturedCompanies = () => {\r\n    return getAllCompanies().is(COMPANY_FEATURED, true)\r\n}\r\n\r\n/**\r\n * \r\n * @param {int} companyId \r\n * @returns \r\n */\r\nexport const getLinkedJobs = companyId => {\r\n    return getAllJobsAndLinkedCompanies().match({ [COMPANY_ID]: companyId });\r\n}\r\n\r\n//*********END OF COMPANIES SECTION","import { supabase } from \"../api\";\r\nimport {\r\n    POST_JOB_TABLE\r\n} from \"@constants/\";\r\nimport { TIER_FREE, TIER_POPULAR } from \"@config/constants\";\r\n\r\nexport const postAJob = jobData => {\r\n    const {priceSelection: planTier,\r\n         description: jobDescription,\r\n         contactEmail, \r\n         companyName,\r\n         jobTitle,\r\n         applicationURL,\r\n\r\n        } = jobData\r\n    const planPrice = planTier === TIER_POPULAR ? 299 : planTier === TIER_FREE ? 0 : 499;\r\n\r\n    return  supabase\r\n        .from(POST_JOB_TABLE)\r\n        .insert([\r\n            { planTier, planPrice, jobDescription, contactEmail, companyName, jobTitle, applicationURL  }\r\n        ])\r\n}","// function to remove spaces and periods from the name passed in\r\n// replaces it with a hypen\r\n// ie abc 123.com -> abc-123-com\r\nexport const makeFriendlyUrl = name => name.toLowerCase().replace(/ /g, '-').replace(/\\./g, '-');\r\n\r\n// checks if an object is empy\r\nexport const isEmpty = checkMe => {\r\n    return Object.keys(checkMe).length === 0\r\n}\r\n\r\nexport const capitalize = word => word.charAt(0).toUpperCase() + word.slice(1)","import { Link } from 'react-router-dom'\r\n\r\n/**\r\n * Some linkData example\r\n * [\r\n        { linkText: 'Home', path: '/' },\r\n        { linkText: 'Companies', path: `${COMPANIES_URL}` },\r\n        { linkText: 'Jobs', path: `${JOBS_URL}` }\r\n *  ]\r\n * @param {Array} linkData \r\n * @returns Array of <Link> objects\r\n */\r\nexport const genLinks = (linkData, style) => {\r\n    return linkData.map(data => {\r\n        return (\r\n            <Link to={data.path} key={data.linkText} className={style}>\r\n                {data.linkText}\r\n            </Link>\r\n        );\r\n    });\r\n}\r\n\r\n/**\r\n * Calls the function 👆 \r\n * used for a single link\r\n * @param {string} linkText \r\n * @param {string} path \r\n * @param {string} style \r\n * @returns \r\n */\r\nexport const genLink = (linkText, path, style) => genLinks([{ linkText, path }], style);\r\n\r\nexport const genFooterLink = (linkText, path, style) => {\r\n    return (\r\n        <Link to={path} key={linkText} className={style}>\r\n            {linkText}\r\n        </Link>\r\n    )\r\n}","export const loading = () => {\r\n    return (\r\n        <div class=\"flex justify-center items-center bg-gray\">\r\n            <div class=\"loader bg-white p-5 rounded-full flex space-x-3\">\r\n                <div class=\"w-5 h-5 bg-gray-darkest rounded-full animate-bounce\"></div>\r\n                <div class=\"w-5 h-5 bg-gray-darkest rounded-full animate-bounce\"></div>\r\n                <div class=\"w-5 h-5 bg-gray-darkest rounded-full animate-bounce\"></div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","export const genListIcon = (src, alt, isFeatured) => {\r\n    return (\r\n        <span className=\"inline-block relative\">\r\n            <img\r\n                className=\"inline-block h-16 w-16 rounded-md hidden lg:block\"\r\n                src={src}\r\n                alt={alt}\r\n            />\r\n            <span className={`${isFeatured ? \"animate-ping\" : \"\"} absolute top-0 right-0 block h-2.5 w-2.5 rounded-full ring-2 ring-white bg-green-400`} />\r\n        </span>\r\n    )\r\n}","export const daysElapsed = start => {\r\n    const date1 = new Date(start);\r\n    const date2 = new Date();\r\n\r\n    // One day in milliseconds\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n\r\n    // Calculating the time difference between two dates\r\n    const diffInTime = date2.getTime() - date1.getTime();\r\n\r\n    // Calculating the no. of days between two dates\r\n    const diffInDays = Math.round(diffInTime / oneDay);\r\n\r\n    return diffInDays;\r\n}","import { JOBS_URL } from \"@constants/\";\r\nimport { makeFriendlyUrl } from '@util/sanitize';\r\n\r\n// function thatcreate the Jobs Tag URL\r\n// It will look like - as an ex: /web3-jobs/solidity-jobs\r\nexport  const genTagsUrl = tag => `${JOBS_URL}/${makeFriendlyUrl(tag)}-jobs`;","import { useState, useEffect } from \"react\";\r\nimport { getAllTags } from \"@db/\";\r\nimport { genFooterLink, genTagsUrl } from \"@util/\";\r\nimport {capitalize } from '@util/sanitize';\r\n\r\n// This is what we will ultimately return\r\n// it contains the inner div's with all the fancy ass links\r\nconst genTags = allTags => {\r\n    const tagsArray = getTagsFromObject(allTags);\r\n    const tagData = genTagData(tagsArray);\r\n    let returnMe = []\r\n\r\n    for (let key in tagData) { returnMe.push(innerHTMLDiv(tagData[key])) }\r\n\r\n    return returnMe;\r\n}\r\n\r\nconst genTagData = tagsFromDB => {\r\n    const rows = Math.round(tagsFromDB.length / 4);\r\n    let tagLinksData = {};\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n        const start = rows * i;\r\n        const end = start + rows\r\n        const segment = tagsFromDB.slice(start, end)\r\n\r\n        tagLinksData[`col${i}`] = genColumnData(segment)\r\n    }\r\n\r\n    // Don't forget the last segment!\r\n    // It's done this way because the last column has the potential to have more rows\r\n    // Not everything is evenly divisible by four :) \r\n    tagLinksData['col3'] = genColumnData(tagsFromDB.slice((rows * 3)));\r\n\r\n    return tagLinksData;\r\n}\r\n\r\nconst genColumnData = tags => {\r\n    return tags.map(tag => {\r\n        const genLinkText = tgTxt => `Web3 ${capitalize(tgTxt)} jobs`;\r\n        return { linkText: genLinkText(tag), path: genTagsUrl(tag) }\r\n    })\r\n}\r\n\r\nconst getTagsFromObject = tagsFromDB => {\r\n    let returnMe = []\r\n    for (let key in tagsFromDB) {\r\n        returnMe.push(tagsFromDB[key]['tagName']);\r\n    }\r\n\r\n    return returnMe;\r\n}\r\n\r\n/**\r\n * Expects the objects coming in to look like this\r\n * { linkText: 'text', path: '/path' }\r\n * \r\n * @param {array of objects} sectionItems \r\n * @param {string} divStyle \r\n * @returns HTML\r\n * Spits this out 👇\r\n    <div>\r\n        <ul role=\"list\" className=\"mt-4 space-y-4\">\r\n            <li key={item.name}>\r\n                <Link to=path\r\n                    <p className={style}>link text</p>\r\n                <Link/>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n */\r\nconst innerHTMLDiv = (sectionItems) => {\r\n    const style = \"text-base text-gray-300 hover:text-white\";\r\n\r\n    return sectionItems.map(item => (\r\n        <li key={item.linkText}>\r\n            {genFooterLink(item.linkText, item.path, style)}\r\n        </li>\r\n    ))\r\n}\r\n\r\nconst navigation = {\r\n    support: [\r\n        { name: 'Pricing', href: '#' },\r\n        { name: 'Guides', href: '#' },\r\n    ],\r\n    company: [\r\n        { name: 'About', href: '#' },\r\n        { name: 'Blog', href: 'https://blog.web3jobs.biz' },\r\n    ],\r\n    legal: [\r\n        { name: 'Privacy', href: '#' },\r\n        { name: 'Terms', href: '#' },\r\n    ],\r\n    social: [\r\n        {\r\n            name: 'Twitter',\r\n            href: 'https://twitter.com/web3jobs_',\r\n            icon: props => (\r\n                <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\r\n                    <path d=\"M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84\" />\r\n                </svg>\r\n            ),\r\n        },\r\n        {\r\n            name: 'GitHub',\r\n            href: 'https://github.com/BB-Computer-Enterprises/web3jobs/',\r\n            icon: props => (\r\n                <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\r\n                    <path\r\n                        fillRule=\"evenodd\"\r\n                        d=\"M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z\"\r\n                        clipRule=\"evenodd\"\r\n                    />\r\n                </svg>\r\n            ),\r\n        },\r\n    ],\r\n}\r\n\r\nexport default function Footer() {\r\n    const [tags, setTags] = useState([]);\r\n    const [errorText, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getTagsFromDB().catch(console.error);\r\n    }, []);\r\n\r\n    // function to pull the data from the DB\r\n    const getTagsFromDB = async () => {\r\n        let { data: tags, error } = await getAllTags();\r\n        if (error) setError(error);\r\n        else setTags(tags)\r\n    };\r\n\r\n    return (\r\n        <footer className=\"bg-gray-dark\" aria-labelledby=\"footer-heading\">\r\n            <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 text-white\">\r\n                <div className=\"pb-8 xl:grid\">\r\n                    <div className=\"grid grid-cols-2 gap-8 xl:col-span-4\">\r\n                        <div className=\"md:grid md:grid-cols-2 md:gap-8\">\r\n                            <div>\r\n                                <ul className=\"mt-4 space-y-4\">\r\n                                    {tags.length ? genTags(tags)[0] : 'Loading Tags'}\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"mt-12 md:mt-0\">\r\n                                <ul className=\"mt-4 space-y-4\">\r\n                                    {tags.length ? genTags(tags)[1] : 'Loading Tags'}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"md:grid md:grid-cols-2 md:gap-8\">\r\n                            <div>\r\n                                <ul className=\"mt-4 space-y-4\">\r\n                                    {tags.length ? genTags(tags)[2] : 'Loading Tags'}\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"mt-12 md:mt-0\">\r\n                                <ul className=\"mt-4 space-y-4\">\r\n                                    {tags.length ? genTags(tags)[3] : 'Loading Tags'}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-8 border-t border-gray-700 pt-8 md:flex md:items-center md:justify-between\">\r\n                    <div className=\"flex space-x-6\">\r\n                        {navigation.social.map((item) => (\r\n                            <a key={item.name} href={item.href} className=\"text-gray-400 hover:text-gray-300\">\r\n                                <span className=\"sr-only\">{item.name}</span>\r\n                                <item.icon className=\"h-6 w-6 hover:text-indigo-700\" aria-hidden=\"true\" />\r\n                            </a>\r\n                        ))}\r\n                        {navigation.support.map((item) => (\r\n                            <a key={item.name} href={item.href}>\r\n                                <span className=\"text-white hover:text-indigo-700\">{item.name}</span>\r\n                            </a>\r\n                        ))}\r\n                        {navigation.company.map((item) => (\r\n                            <a key={item.name} href={item.href}>\r\n                                <span className=\"text-white hover:text-indigo-700\">{item.name}</span>\r\n                            </a>\r\n                        ))}\r\n                        {navigation.legal.map((item) => (\r\n                            <a key={item.name} href={item.href}>\r\n                                <span className=\"text-white hover:text-indigo-700\">{item.name}</span>\r\n                            </a>\r\n                        ))}\r\n                    </div>\r\n                    <p className=\"mt-8 text-base md:mt-0 md:order-1\">\r\n                        &copy; 2021 BB Computer Enterprises LLC. All rights reserved.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","import { getAll } from \"./dbCommon\";\r\nimport {\r\n    TAGS_TABLE\r\n} from \"@constants/\";\r\n\r\n//*********TAGS SECTION\r\n\r\n/**\r\n * function to get all the jobs\r\n * @returns Array full of all job objects\r\n */\r\n export const getAllTags = () => {\r\n    return getAll(TAGS_TABLE);\r\n}\r\n\r\n//*********END OF TAGS SECTION","import { Popover } from '@headlessui/react'\r\nimport {\r\n    HOME_LINK,\r\n    COMPANIES_LINK,\r\n    JOBS_LINK,\r\n    POST_JOB_LINK,\r\n    COMPANIES_URL,\r\n    JOBS_URL,\r\n    POST_A_JOB_URL\r\n} from \"@constants/\";\r\nimport { genLinks, genLink } from '@util/';\r\n\r\nconst linkData = [\r\n    { linkText: HOME_LINK, path: '/' },\r\n    { linkText: COMPANIES_LINK, path: COMPANIES_URL },\r\n    { linkText: JOBS_LINK, path: JOBS_URL }\r\n]\r\n\r\nconst linkStyle = \"text-base text-2xl font-medium text-white hover:text-white\";\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header className=\"bg-gray-dark sticky top-0 z-50\">\r\n            <nav className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\" aria-label=\"Top\">\r\n                <div className=\"w-full py-6 flex items-center justify-between border-b border-indigo-500 lg:border-none\">\r\n                    <div className=\"flex items-center\">\r\n                        <a href=\"#\">\r\n                            <span className=\"sr-only\">Workflow</span>\r\n                            <img\r\n                                className=\"h-10 w-auto\"\r\n                                src=\"https://tailwindui.com/img/logos/workflow-mark.svg?color=white\"\r\n                                alt=\"\"\r\n                            />\r\n                        </a>\r\n                        <div className=\"hidden ml-10 space-x-8 lg:block\">\r\n                            {genLinks(linkData, linkStyle)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ml-10 space-x-4\">\r\n                        {genLink(\r\n                            POST_JOB_LINK,\r\n                            POST_A_JOB_URL,\r\n                            \"ml-8 inline-flex items-center justify-center px-4 py-2 rounded-md shadow-sm text-base text-2xl font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"py-4 flex flex-wrap justify-center space-x-6 lg:hidden\">\r\n                    {genLinks(linkData, linkStyle)}\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n","const AboutPage = () => {\r\n    return (\r\n        <div className=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\r\n            <h1>About Screen</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutPage;","export default function PageContainer(content, title, subtitle) {\r\n    return (\r\n        <div className=\"dark:bg-gray bg-gray\">\r\n            <h2 className=\"lg:text-6xl text-4xl font-bold text-white text-center pt-10 pb-5 lg:py-10\">{title}</h2>\r\n            <h3 className=\"lg:text-4xl text-2xl font-bold text-white text-center font-mono\">{subtitle}</h3>\r\n            <div className=\"container mx-auto px-4 lg:px-8 p-8 lg:py-20 lg:px-52\">\r\n                {content}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PageContainer from \"../PageContainer\";\r\nimport {\r\n    getAllCompaniesInAlphabetic,\r\n    getFeaturedCompanies\r\n} from \"@db/\";\r\nimport {\r\n    COMPANIES_URL,\r\n    COMPANY_DESCRIPTION,\r\n    COMPANY_ID,\r\n    COMPANY_NAME,\r\n    COMPANIES_PAGE_SUBTITLE,\r\n    COMPANIES_PAGE_TITLE,\r\n    COMPANY_FEATURED,\r\n    FEATURED_STYLE,\r\n    REGULAR_STYLE,\r\n    COMPANY_ICON_URL,\r\n    FEATURED_TEXT_STYLE,\r\n    REGULAR_TEXT_STYLE\r\n} from \"@constants/\";\r\nimport { makeFriendlyUrl } from \"@util/sanitize\";\r\nimport { loading } from \"@util/loading\";\r\nimport { genListIcon } from \"@util/genListIcon\";\r\n\r\nconst AllCompaniesPage = () => {\r\n    const [companies, setCompanies] = useState([]);\r\n    const [featuredCompanies, setFeaturedCompanies] = useState([]);\r\n    const [errorText, setError] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        fetchCompanies().catch(console.error);\r\n    }, []);\r\n\r\n    const fetchCompanies = async () => {\r\n        let { data: companies, error } = await getAllCompaniesInAlphabetic();\r\n        let { data: featuredCompanies, featuredError } = await getFeaturedCompanies();\r\n        if (error || featuredError) setError(error || featuredError);\r\n        else {\r\n            setFeaturedCompanies(featuredCompanies)\r\n            setCompanies(companies)\r\n            setIsLoading(false);\r\n        };\r\n    };\r\n\r\n    // function that will destructure the company object\r\n    const generateLinkURL = company => {\r\n        const { [COMPANY_NAME]: cName } = company;\r\n        return `${COMPANIES_URL}/${makeFriendlyUrl(cName)}`\r\n    }\r\n\r\n    const genCompanies = companyData => {\r\n        return (\r\n            companyData.map(company => (\r\n                <Link key={company[COMPANY_ID]} to={{ pathname: generateLinkURL(company), state: { company } }} className={`${company[COMPANY_FEATURED] ? FEATURED_STYLE : REGULAR_STYLE}`}>\r\n                    <div className=\"lg:px-4 py-4 flex items-center\">\r\n                        {genListIcon(company[COMPANY_ICON_URL], \"\", company[COMPANY_FEATURED])}\r\n                        <div className=\"flex-1 lg:pl-8 pl-5 flex items-center justify-between\">\r\n                            <div>\r\n                                <h1 className={`${company[COMPANY_FEATURED] ? FEATURED_TEXT_STYLE : REGULAR_TEXT_STYLE}`}>{company[COMPANY_NAME]}</h1>\r\n                                <p className=\"text-white lg:ml-1 flex-shrink-0 font-normal overflow-hidden\">{company[COMPANY_DESCRIPTION]}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            ))\r\n        )\r\n    }\r\n\r\n    const getContent = () => {\r\n        return (\r\n            <div className={`${isLoading ? \"\" : \"shadow-2xl\"} bg-gray-dark overflow-hidden rounded-md`}>\r\n                <span className={\"h-full justify-center items-center\"} >\r\n                    {isLoading ? loading() : ''}\r\n                </span>\r\n                {genCompanies(featuredCompanies)}\r\n                {genCompanies(companies)}\r\n                {!!errorText && (\r\n                    <div className={\"border max-w-sm self-center px-4 py-2 mt-4 text-center text-sm bg-red-100 border-red-300 text-red-400\"}>\r\n                        {errorText}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        PageContainer(getContent(), COMPANIES_PAGE_TITLE, COMPANIES_PAGE_SUBTITLE)\r\n    );\r\n}\r\n\r\nexport default AllCompaniesPage;","\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeFriendlyUrl } from \"@util/sanitize\";\r\nimport { daysElapsed } from \"@util/daysElapsed\";\r\nimport {\r\n    COMPANY_NAME,\r\n    JOBS_URL,\r\n    JOB_DATE_POSTED,\r\n    JOB_ID,\r\n    JOB_TITLE,\r\n    JOB_TAGS,\r\n    COMPANY_ICON_URL,\r\n    COMPANY_FEATURED,\r\n    FEATURED_STYLE,\r\n    REGULAR_STYLE,\r\n    FEATURED_TEXT_STYLE,\r\n    REGULAR_TEXT_STYLE\r\n} from \"@constants/\";\r\nimport { genListIcon, genFooterLink, genTagsUrl } from \"@util/\";\r\n\r\n// function that will destructure the job object\r\n// it pulls out the title, id and company name to be used in the URL\r\nconst generateLinkURL = job => {\r\n    const { [JOB_TITLE]: title, [JOB_ID]: id, companies: { [COMPANY_NAME]: cName } } = job;\r\n    return `${JOBS_URL}/${makeFriendlyUrl(title)}-${makeFriendlyUrl(cName)}/${id}`\r\n}\r\n\r\nconst sepratetags = (tags, isFeatured) => {\r\n    const style = `${isFeatured ? \"bg-gray-dark text-white hover:bg-white hover:text-black\" : \"bg-indigo-100 text-indigo-800 hover:bg-gray-lightest hover:text-white \"} flex-1 items-center px-3 py-0.5 rounded-full text-sm font-medium `\r\n    return tags.map(tag => (\r\n        <span className={style}>\r\n            {genFooterLink(tag, genTagsUrl(tag))}\r\n        </span>\r\n    ))\r\n}\r\n\r\nconst getCompany = job => {\r\n    const { companies } = job;\r\n    return companies;\r\n}\r\n\r\nconst JobsList = ({ jobs }) => {\r\n    return (\r\n        jobs.map(job => {\r\n            const company = getCompany(job);\r\n\r\n            return (\r\n                <Link key={job[JOB_ID]} to={{ pathname: generateLinkURL(job), state: { job } }} className={`${company[COMPANY_FEATURED] ? FEATURED_STYLE : REGULAR_STYLE}`}>\r\n                    <div className=\"lg:px-4 py-4 flex items-center\">\r\n                        {genListIcon(company[COMPANY_ICON_URL], \"\", company[COMPANY_FEATURED])}\r\n                        <div className=\"flex-1 pl-8 flex items-center justify-between\">\r\n                            <div>\r\n                                <h1 className={`${company[COMPANY_FEATURED] ? FEATURED_TEXT_STYLE : REGULAR_TEXT_STYLE}`}>{job[JOB_TITLE]}</h1>\r\n                                <p className=\"mb-1 flex-shrink-0 font-normal text-white font-medium\">{company[COMPANY_NAME]}</p>\r\n                                <p className=\"flex-shrink-0 font-normal text-white \">📅 Posted {daysElapsed(job[JOB_DATE_POSTED])} days ago</p>\r\n                            </div>\r\n                            <div className=\"inline-flex space-x-2 hidden lg:block\">\r\n                                {sepratetags(job[JOB_TAGS], company[COMPANY_FEATURED])}\r\n                            </div>\r\n                            <button\r\n                                className={`${!company[COMPANY_FEATURED] ? \"bg-gray-light hover:bg-white hover:text-black\" : \"hover:bg-indigo-100 hover:text-black border\"} items-center px-6 py-3 font-medium rounded-md shadow-2xl text-white bg-indigo-600 hidden lg:block`}\r\n                            >\r\n                                Apply\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            )\r\n        }\r\n        )\r\n    )\r\n}\r\n\r\nexport default JobsList;","import { useState, useEffect } from \"react\";\r\nimport PageContainer from \"../PageContainer\";\r\nimport {\r\n    getAllJobsAndCompaniesInReverseDate,\r\n    getJobAndCompanyFromTag\r\n} from \"@db/\";\r\nimport JobsList from \"../JobsList\";\r\nimport {\r\n    JOBS_URL,\r\n    ALL_JOBS_PAGE_TITLE,\r\n    ALL_JOBS_PAGE_SUBTITLE\r\n} from \"@config/constants\";\r\nimport { loading } from \"@util/loading\";\r\n\r\n\r\nconst AllJobsPage = passedInTag => {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [errorText, setError] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        fetchJobs().catch(console.error);\r\n    }, []);\r\n\r\n    const isATag = () => {\r\n        const { location: { pathname } } = passedInTag\r\n        return pathname.length > JOBS_URL.length;\r\n    }\r\n\r\n    /**\r\n     * Starting with /web3-jobs/blockchain-jobs\r\n     * then split -> ['', 'web3-jobs', 'cool-blockchain-jobs' ]\r\n     * then last item -> 'cool-blockchain-jobs'\r\n     * then slice -> 'cool-blockchain'\r\n     * then replace -> 'cool blockchain'\r\n     * @returns string that is just a tag\r\n     */\r\n    const parseURLForTag = () => {\r\n        const { location: {\r\n            pathname: pathname\r\n        } } = passedInTag\r\n        const sectioned = pathname.split('/');\r\n        let lastItem = sectioned[sectioned.length - 1];\r\n        lastItem = lastItem.slice(0, lastItem.length - 5);\r\n        return lastItem.replace(/-/g, ' ');\r\n    }\r\n\r\n    // function to pull the data from the DB\r\n    const fetchJobs = async () => {\r\n        let { data: jobs, error } = isATag() ?\r\n            await getJobAndCompanyFromTag(parseURLForTag()) :\r\n            await getAllJobsAndCompaniesInReverseDate();\r\n        if (error) setError(error);\r\n        else {\r\n            setJobs(jobs)\r\n            setIsLoading(false);\r\n        };\r\n    };\r\n\r\n    const getContent = () => {\r\n        return (\r\n            <div className={`${isLoading ? \"\" : \"shadow-2xl\"} overflow-hidden rounded-md`} >\r\n                <span className={\"h-full justify-center items-center\"} >\r\n                    {isLoading ? loading() : ''}\r\n                </span>\r\n                <JobsList jobs={jobs} isLoading={isLoading} tag={parseURLForTag()} />\r\n\r\n                {!!errorText && (\r\n                    <div className={\"border max-w-sm self-center px-4 py-2 mt-4 text-center text-sm bg-red-100 border-red-300 text-red-400\"}>\r\n                        {errorText}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        PageContainer(getContent(), ALL_JOBS_PAGE_TITLE, ALL_JOBS_PAGE_SUBTITLE)\r\n    );\r\n}\r\n\r\nexport default AllJobsPage;","import { supabase } from \"../api\";\r\nimport {\r\n    getAll, getAllJobsAndLinkedCompanies\r\n} from \"./dbCommon\";\r\nimport {\r\n    JOBS_TABLE,\r\n    COMPANY_TABLE,\r\n    JOB_DATE_POSTED,\r\n    JOB_ID,\r\n    JOB_TAGS\r\n} from \"@constants/\";\r\n\r\n//*********JOBS SECTION\r\n\r\n/**\r\n * function to get all the jobs\r\n * @returns Array full of all job objects\r\n */\r\nexport const getAllJobs = () => {\r\n    return getAll(JOBS_TABLE);\r\n}\r\n\r\n/**\r\n * function to get all the jobs in reverse chronology\r\n * ie. newest first ;) \r\n * @returns Array full of all job objects\r\n */\r\nexport const getAllJobsInReverseDate = () => {\r\n    return getAllJobs().order(JOB_DATE_POSTED, { ascending: false });\r\n}\r\n\r\n/**\r\n * function to get all the jobs in reverse chronology\r\n * ie. newest first ;) \r\n * @returns Array full of all job objects\r\n */\r\nexport const getAllJobsAndCompaniesInReverseDate = () => {\r\n    return getAllJobsAndLinkedCompanies().order(JOB_DATE_POSTED, { ascending: false });\r\n}\r\n\r\n/**\r\n * function to get a specific job AND the company associated with it\r\n * @param {int} jobId \r\n * @returns Array with a Job + Company object\r\n */\r\nexport const getJobAndCompanyFromId = jobId => {\r\n    return getAllJobsAndLinkedCompanies().match({ [JOB_ID]: jobId })\r\n}\r\n\r\n/**\r\n * function to get all the jobs with the associated tag\r\n * @param {string} tag\r\n * @returns Array with a Job + Company object filtered by the tag\r\n */\r\n export const getJobAndCompanyFromTag = tag => {\r\n    return getAllJobsAndLinkedCompanies().cs( JOB_TAGS, [tag, tag] )\r\n}\r\n\r\n/**\r\n * function to get all companies that are assocaited with a job\r\n * @returns Array full of all Jobs and All companies\r\n */\r\nexport const getAllLinkedCompanies = () => {\r\n    return supabase\r\n        .from(JOBS_TABLE)\r\n        .select(`\r\n        ${COMPANY_TABLE}(\r\n            *\r\n        )`)\r\n}\r\n\r\n//*********END OF JOBS SECTION","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PageContainer from \"../PageContainer\";\r\nimport { getLinkedJobs } from \"@db/\";\r\nimport {\r\n    COMPANIES_URL,\r\n    COMPANY_DESCRIPTION,\r\n    COMPANY_ID,\r\n    COMPANY_NAME,\r\n    COMPANY_URL\r\n} from \"@constants/\";\r\nimport JobsList from \"../JobsList\";\r\n\r\nconst CompanyPage = company => {\r\n    const [linkedJobs, setJobs] = useState([]);\r\n    const [errorText, setError] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const {\r\n        location: {\r\n            state: {\r\n                company: {\r\n                    [COMPANY_NAME]: cName,\r\n                    [COMPANY_DESCRIPTION]: cDesc,\r\n                    [COMPANY_URL]: cUrl,\r\n                    [COMPANY_ID]: cId\r\n                }\r\n            }\r\n        }\r\n    } = company;\r\n\r\n    useEffect(() => {\r\n        getJobs().catch(console.error);\r\n    }, []);\r\n\r\n    const getJobs = async () => {\r\n        let { data: linkedJobs, error } = await getLinkedJobs(cId);\r\n        if (error) setError(error);\r\n        else {\r\n            setJobs(linkedJobs)\r\n            setIsLoading(false);\r\n        };\r\n    };\r\n\r\n    const getContent = () => {\r\n        return (\r\n            <div>\r\n                <p>Description: {`${cDesc}`}</p>\r\n                <p>Website: {`${cUrl}`}</p>\r\n                <Link to={COMPANIES_URL}>Back to All Companies</Link>\r\n                <h1>Current jobs 👇</h1>\r\n                <JobsList jobs={linkedJobs} isLoading />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        PageContainer(getContent(), cName, cDesc)\r\n    );\r\n};\r\n\r\nexport default CompanyPage;\r\n","\r\nconst NotFoundPage = () => {\r\n    return (<h1>404 - you lost</h1>)\r\n}\r\n\r\nexport default NotFoundPage;","import { useState, Fragment } from \"react\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckIcon, ExclamationCircleIcon } from '@heroicons/react/outline';\r\nimport { MailIcon } from '@heroicons/react/solid';\r\nimport { Transition } from '@headlessui/react'\r\nimport { CheckCircleIcon } from '@heroicons/react/outline'\r\nimport { XIcon } from '@heroicons/react/solid'\r\n\r\nimport PageContainer from \"../PageContainer\";\r\nimport { postAJob } from \"@db/\";\r\nimport {\r\n    TIER_FREE,\r\n    TIER_POPULAR,\r\n    TIER_SPENCY\r\n} from \"@constants/\";\r\n\r\nconst freeFeatures = [\r\n    'Job listed on the site',\r\n    'Company added to the site'\r\n];\r\n\r\nconst mostPopular = [\r\n    '👈 Everything in free',\r\n    'Job featured for 1️⃣ week',\r\n    'Primo real estate in 1️⃣ newsletter 👀',\r\n    'Company featured for 1️⃣ week!',\r\n];\r\n\r\nconst spencyFeatures = [\r\n    '👈 Everything here for 4️⃣ weeks!!',\r\n    'Podcast 🎙 && post on our blog 💪'\r\n];\r\n\r\nconst buttonStyles = {\r\n    notSelected: \"block w-full text-center rounded-lg border border-transparent bg-white px-6 py-3 text-base font-medium text-indigo-600 hover:bg-gray-50\",\r\n    selected: \"block w-full text-center rounded-lg border border-transparent bg-indigo-600 px-6 py-4 text-xl leading-6 font-medium text-white hover:bg-indigo-700\",\r\n}\r\n\r\nconst selectedButton = () => {\r\n    return (\r\n        <div className=\"flex items-start\">\r\n            <div className=\"flex-shrink-0\">\r\n                <CheckIcon className=\"flex-shrink-0 lg:h-10 h-8 w-10 text-green-500\" aria-hidden=\"true\" />\r\n            </div>\r\n            <p className=\"lg:text-3xl text-2xl text-center flex-grow font-medium dark:text-white text-white\">Selected</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst paymentOptions = formik => {\r\n    return (\r\n        <div className=\"sm:col-span-6 lg:py-5\">\r\n            <div className=\"relative lg:grid lg:grid-cols-7\">\r\n                <div className=\"mx-auto max-w-md lg:mx-0 lg:max-w-none lg:col-start-1 lg:col-end-3 lg:row-start-2 lg:row-end-3\">\r\n                    <div className=\"h-full flex flex-col rounded-lg shadow-2xl overflow-hidden lg:rounded-none lg:rounded-l-lg\">\r\n                        <div className=\"flex-1 flex flex-col\">\r\n                            <div className=\"bg-white px-6 py-10\">\r\n                                <div>\r\n                                    <div className=\"mt-4 flex items-center justify-center\">\r\n                                        <span className=\"px-3 flex items-start text-5xl tracking-tight text-gray-900\">\r\n                                            <span className=\"font-extrabold lg:text-6xl\">Free!</span>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex-1 flex flex-col justify-between border-t-2 border-gray-light p-6 bg-gray-lightest sm:p-10 lg:p-6 xl:p-10\">\r\n                                <ul className=\"space-y-4\">\r\n                                    {freeFeatures.map((feature) => (\r\n                                        <li key={feature} className=\"flex items-start\">\r\n                                            <div className=\"flex-shrink-0\">\r\n                                                <CheckIcon className=\"flex-shrink-0 h-6 w-6 text-green-500\" aria-hidden=\"true\" />\r\n                                            </div>\r\n                                            <p className=\"ml-3 text-base font-medium text-white\">{feature}</p>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                                <div className=\"mt-8\">\r\n                                    <div className=\"rounded-lg shadow-md\">\r\n                                        <button\r\n                                            className={`${formik.values.priceSelection === TIER_FREE ? buttonStyles.selected : buttonStyles.notSelected}`}\r\n                                            aria-describedby=\"tier-hobby\"\r\n                                            onClick={() => updatePriceTier(formik.setFieldValue, TIER_FREE)}\r\n                                        >\r\n                                            {formik.values.priceSelection === TIER_FREE ? selectedButton() : \"Select\"}\r\n                                        </button >\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-10 max-w-lg mx-auto lg:mt-0 lg:max-w-none lg:mx-0 lg:col-start-3 lg:col-end-6 lg:row-start-1 lg:row-end-4\">\r\n                    <div className=\"relative z-10 rounded-lg shadow-xl\">\r\n                        <div\r\n                            className=\"pointer-events-none absolute inset-0 rounded-lg border-2 border-indigo-600\"\r\n                            aria-hidden=\"true\"\r\n                        />\r\n                        <div className=\"absolute inset-x-0 top-0 transform translate-y-px\">\r\n                            <div className=\"flex justify-center transform -translate-y-1/2\">\r\n                                <span className=\"inline-flex rounded-full bg-indigo-600 px-4 py-1 text-sm font-semibold tracking-wider uppercase text-white\">\r\n                                    Most popular\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bg-green-200 bg-opacity-85 rounded-t-lg px-6 pt-12 pb-10\">\r\n                            <div>\r\n                                <div className=\"mt-4 flex items-center justify-center\">\r\n                                    <span className=\"px-3 flex items-start tracking-tight text-gray-900 sm:text-6xl\">\r\n                                        <span className=\"mt-2 mr-2 text-4xl font-medium\">$</span>\r\n                                        <span className=\"text-7xl lg:text-9xl font-extrabold\">299</span>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"rounded-b-lg pt-10 pb-8 px-6 bg-green-300 sm:px-10 sm:py-10\">\r\n                            <ul className=\"space-y-4\">\r\n                                {mostPopular.map((feature) => (\r\n                                    <li key={feature} className=\"flex items-start\">\r\n                                        <div className=\"flex-shrink-0\">\r\n                                            <CheckIcon className=\"flex-shrink-0 h-6 w-6 text-green-500\" aria-hidden=\"true\" />\r\n                                        </div>\r\n                                        <p className=\"ml-3 text-base text-lg lg:text-xl font-medium text-black-500\">{feature}</p>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                            <div className=\"mt-10\">\r\n                                <div className=\"rounded-lg shadow-md\">\r\n                                    <button\r\n                                        className={`${formik.values.priceSelection === TIER_POPULAR ? buttonStyles.selected : buttonStyles.notSelected}`}\r\n                                        aria-describedby=\"tier-hobby\"\r\n                                        onClick={() => updatePriceTier(formik.setFieldValue, TIER_POPULAR)}\r\n                                    >\r\n                                        {formik.values.priceSelection === TIER_POPULAR ? selectedButton() : \"Select\"}\r\n                                    </button >\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-10 mx-auto max-w-md lg:m-0 lg:max-w-none lg:col-start-6 lg:col-end-8 lg:row-start-2 lg:row-end-3\">\r\n                    <div className=\"h-full flex flex-col rounded-lg shadow-2xl overflow-hidden lg:rounded-none lg:rounded-r-lg\">\r\n                        <div className=\"flex-1 flex flex-col\">\r\n                            <div className=\"bg-white px-6 py-10\">\r\n                                <div>\r\n                                    <div className=\"mt-4 flex items-center justify-center\">\r\n                                        <span className=\"px-3 flex items-start text-5xl tracking-tight text-gray-900\">\r\n                                            <span className=\"mt-2 mr-2 text-4xl font-medium\">$</span>\r\n                                            <span className=\"lg:text-6xl font-extrabold\">499</span>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex-1 flex flex-col justify-between border-t-2 border-gray-light p-6 bg-gray-lightest sm:p-10 lg:p-6 xl:p-10\">\r\n                                <ul className=\"space-y-4\">\r\n                                    {spencyFeatures.map((feature) => (\r\n                                        <li key={feature} className=\"flex items-start\">\r\n                                            <div className=\"flex-shrink-0\">\r\n                                                <CheckIcon className=\"flex-shrink-0 h-6 w-6 text-green-500\" aria-hidden=\"true\" />\r\n                                            </div>\r\n                                            <p className=\"ml-3 text-base font-medium text-white\">{feature}</p>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                                <div className=\"mt-8\">\r\n                                    <div className=\"rounded-lg shadow-md\">\r\n                                        <button\r\n                                            className={`${formik.values.priceSelection === TIER_SPENCY ? buttonStyles.selected : buttonStyles.notSelected}`}\r\n                                            aria-describedby=\"tier-hobby\"\r\n                                            onClick={() => updatePriceTier(formik.setFieldValue, TIER_SPENCY)}\r\n                                        >\r\n                                            {formik.values.priceSelection === TIER_SPENCY ? selectedButton() : \"Select\"}\r\n                                        </button >\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst updatePriceTier = (setFieldValue, value) => {\r\n    setFieldValue(\"priceSelection\", value);\r\n}\r\n\r\nconst popOver = (show, setShow) => {\r\n    return (\r\n        <>\r\n            {/* Global notification live region, render this permanently at the end of the document */}\r\n            <div\r\n                aria-live=\"assertive\"\r\n                className=\"fixed inset-0 flex items-end px-4 py-6 pointer-events-none sm:p-6 sm:items-start\"\r\n            >\r\n                <div className=\"w-full flex flex-col items-center space-y-4 sm:items-end\">\r\n                    {/* Notification panel, dynamically insert this into the live region when it needs to be displayed */}\r\n                    <Transition\r\n                        show={show}\r\n                        as={Fragment}\r\n                        enter=\"transform ease-out duration-300 transition\"\r\n                        enterFrom=\"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\"\r\n                        enterTo=\"translate-y-0 opacity-100 sm:translate-x-0\"\r\n                        leave=\"transition ease-in duration-100\"\r\n                        leaveFrom=\"opacity-100\"\r\n                        leaveTo=\"opacity-0\"\r\n                    >\r\n                        <div className=\"max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\">\r\n                            <div className=\"p-4\">\r\n                                <div className=\"flex items-start\">\r\n                                    <div className=\"flex-shrink-0\">\r\n                                        <CheckCircleIcon className=\"h-6 w-6 text-green-400\" aria-hidden=\"true\" />\r\n                                    </div>\r\n                                    <div className=\"ml-3 w-0 flex-1 pt-0.5\">\r\n                                        <p className=\"text-sm font-medium text-gray-900\">Successfully submitted!</p>\r\n                                        <p className=\"mt-1 text-sm text-gray-500\">We will follow up within 24 hours</p>\r\n                                    </div>\r\n                                    <div className=\"ml-4 flex-shrink-0 flex\">\r\n                                        <button\r\n                                            className=\"bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                            onClick={() => {\r\n                                                setShow(false)\r\n                                            }}\r\n                                        >\r\n                                            <span className=\"sr-only\">Close</span>\r\n                                            <XIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Transition>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst PostAJobPage = () => {\r\n    const [show, setShow] = useState(false)\r\n\r\n    const putDataIntoDB = async jobData => {\r\n        const { data: job, error } = await postAJob(jobData)\r\n        if (!error) setShow(true)\r\n    }\r\n\r\n    const getContent = formik => {\r\n        return (\r\n            <div>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <div>\r\n                        <div className=\"pb-8\">\r\n                            <h3 className=\"text-5xl lg:text-6xl leading-tight font-medium dark:text-white text-gray\">The first step to your next hire 👇</h3>\r\n                            <p className=\"mt-6 text-2xl lg:text-3xl dark:text-white text-gray-500\">\r\n                                It will only take 2 minutes ⏳\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6\">\r\n                            <div className=\"sm:col-span-6\">\r\n                                <label htmlFor=\"contactEmail\" className=\"pb-1 lg:pb-3 block text-lg lg:text-3xl md:text-2xl font-medium dark:text-white text-gray-700\">\r\n                                    Company Email\r\n                                </label>\r\n                                <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                                        <MailIcon className=\"h-7 w-7 text-gray-400\" aria-hidden=\"true\" />\r\n                                    </div>\r\n                                    <input\r\n                                        id=\"contactEmail\"\r\n                                        name=\"contactEmail\"\r\n                                        type=\"email\"\r\n                                        autoComplete=\"email\"\r\n                                        className={`${formik.touched.contactEmail && formik.errors.contactEmail ? \"border-4 border-red-500\" : \"\"} lg:h-14 md:h-12 flex-1 pl-10 lg:pl-12 focus:ring-indigo-500 md:text-xl focus:border-indigo-500 block w-full min-w-0 rounded-none rounded-md sm:text-sm`}\r\n                                        aria-invalid=\"true\"\r\n                                        aria-describedby=\"email-error\"\r\n                                        {...formik.getFieldProps('contactEmail')}\r\n                                    />\r\n                                    {formik.touched.contactEmail && formik.errors.contactEmail ? (\r\n                                        <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\r\n                                            <ExclamationCircleIcon className=\"h-5 w-5 lg:h-7 lg:w-7 text-red-500\" aria-hidden=\"true\" />\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                {formik.touched.contactEmail && formik.errors.contactEmail ? (\r\n                                    <p className=\"mt-2 text-lg text-white\" id=\"email-error\">\r\n                                        {formik.errors.contactEmail}\r\n                                    </p>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"sm:col-span-6\">\r\n                                <label htmlFor=\"companyName\" className=\"pb-1 lg:pb-3 block text-lg lg:text-3xl md:text-2xl font-medium dark:text-white text-gray-700\">\r\n                                    Company Name\r\n                                </label>\r\n                                <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                                    <input\r\n                                        id=\"companyName\"\r\n                                        name=\"companyName\"\r\n                                        type=\"text\"\r\n                                        autoComplete=\"organization\"\r\n                                        className={`${formik.touched.companyName && formik.errors.companyName ? \"border-4 border-red-500\" : \"\"} lg:h-14 md:h-12 flex-1 focus:ring-indigo-500 md:text-xl focus:border-indigo-500 block w-full min-w-0 rounded-none rounded-md sm:text-sm`}\r\n                                        {...formik.getFieldProps('companyName')}\r\n                                    />\r\n                                    {formik.touched.companyName && formik.errors.companyName ? (\r\n                                        <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\r\n                                            <ExclamationCircleIcon className=\"h-5 w-5 lg:h-7 lg:w-7 text-red-500\" aria-hidden=\"true\" />\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                {formik.touched.companyName && formik.errors.companyName ? (\r\n                                    <p className=\"mt-2 text-lg text-white\" id=\"email-error\">\r\n                                        {formik.errors.companyName}\r\n                                    </p>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"sm:col-span-6\">\r\n                                <label htmlFor=\"jobTitle\" className=\"pb-1 lg:pb-3 block text-lg lg:text-3xl md:text-2xl font-medium dark:text-white text-gray-700\">\r\n                                    Job Title\r\n                                </label>\r\n                                <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                                    <input\r\n                                        id=\"jobTitle\"\r\n                                        name=\"jobTitle\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"i.e. Senior Solidity Engineer\"\r\n                                        className={`${formik.touched.jobTitle && formik.errors.jobTitle ? \"border-4 border-red-500\" : \"\"} lg:h-14 md:h-12 flex-1 focus:ring-indigo-500 md:text-xl focus:border-indigo-500 block w-full min-w-0 rounded-none rounded-md sm:text-sm border-gray-300`}\r\n                                        {...formik.getFieldProps('jobTitle')}\r\n                                    />\r\n                                    {formik.touched.jobTitle && formik.errors.jobTitle ? (\r\n                                        <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\r\n                                            <ExclamationCircleIcon className=\"h-5 w-5 lg:h-7 lg:w-7 text-red-500\" aria-hidden=\"true\" />\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                {formik.touched.jobTitle && formik.errors.jobTitle ? (\r\n                                    <p className=\"mt-2 text-lg text-white\" id=\"email-error\">\r\n                                        {formik.errors.jobTitle}\r\n                                    </p>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            {paymentOptions(formik)}\r\n\r\n                            <div className=\"sm:col-span-6\">\r\n                                <label htmlFor=\"description\" className=\"pb-1 lg:pb-3 block text-lg lg:text-3xl md:text-2xl font-medium dark:text-white text-gray-700\">\r\n                                    Job Description\r\n                                </label>\r\n                                <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                                    <textarea\r\n                                        id=\"description\"\r\n                                        name=\"description\"\r\n                                        rows={10}\r\n                                        placeholder=\"Describe the role - please use markdown formatting 🤙\"\r\n                                        className={`${formik.touched.description && formik.errors.description ? \"border-4 border-red-500\" : \"\"} flex-1 focus:ring-indigo-500 focus:border-indigo-500 md:text-xl block w-full min-w-0 rounded-none rounded-md sm:text-sm border-gray-300`}\r\n                                        {...formik.getFieldProps('description')}\r\n                                    />\r\n                                    {formik.touched.description && formik.errors.description ? (\r\n                                        <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\r\n                                            <ExclamationCircleIcon className=\"h-5 w-5 lg:h-7 lg:w-7 text-red-500\" aria-hidden=\"true\" />\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                {formik.touched.description && formik.errors.description ? (\r\n                                    <p className=\"mt-2 text-lg text-white\" id=\"email-error\">\r\n                                        {formik.errors.description}\r\n                                    </p>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"sm:col-span-6\">\r\n                                <label htmlFor=\"application url\" className=\"pb-1 lg:pb-3 block text-lg lg:text-3xl md:text-2xl font-medium dark:text-white text-gray-700\">\r\n                                    Apply URL\r\n                                </label>\r\n                                <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n                                    <span className=\"inline-flex items-center px-3 rounded-l-md md:text-xl border border-r-0 border-white bg-gray-lightest dark:text-white sm:text-sm\">\r\n                                        https://\r\n                                    </span>\r\n                                    <input\r\n                                        id=\"applicationURL\"\r\n                                        name=\"applicationURL\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"i.e. company.com/careers/apply\"\r\n                                        className={`${formik.touched.applicationURL && formik.errors.applicationURL ? \"border-t-4 border-l-4 border-b-4 border-red-500\" : \"\"} lg:h-14 md:h-12 flex-1 focus:ring-indigo-500 md:text-xl focus:border-indigo-500 block w-full min-w-0 rounded-none sm:text-sm`}\r\n                                        {...formik.getFieldProps('applicationURL')}\r\n                                    />\r\n                                    {formik.touched.applicationURL && formik.errors.applicationURL ? (\r\n                                        <span className=\"inline-flex items-center px-3 rounded-r-md md:text-xl border border-r-0 bg-white text-gray-500 sm:text-sm\">\r\n                                            <ExclamationCircleIcon className=\"h-5 w-5 lg:h-7 lg:w-7 text-red-500\" aria-hidden=\"true\" />\r\n                                        </span>\r\n                                    ) : null}\r\n                                </div>\r\n                                {formik.touched.applicationURL && formik.errors.applicationURL ? (\r\n                                    <p className=\"mt-2 text-lg text-white\" id=\"email-error\">\r\n                                        {formik.errors.applicationURL}\r\n                                    </p>\r\n                                ) : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className=\"block py-8\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"block w-full lg:w-3/5 lg:h-20 lg:text-4xl lg:justify-center md:text-3xl justify-center py-2 px-4 border border-transparent shadow-sm text-lg font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                            >\r\n                                Post that Job 🚀!\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                {popOver(show, setShow)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                contactEmail: '',\r\n                companyName: '',\r\n                jobTitle: '',\r\n                priceSelection: TIER_POPULAR,\r\n                description: '',\r\n                applicationURL: '',\r\n            }}\r\n            validationSchema={Yup.object({\r\n                contactEmail: Yup.string().email('👆 Invalid 📧 address').required('👆 Email Required'),\r\n                companyName: Yup.string().required('👆 Company name Required'),\r\n                jobTitle: Yup.string().required('👆 Job title Required'),\r\n                description: Yup.string().min(20, 'That\\'s a pretty short description, dont you think 🤔?').required('👆 Description Required'),\r\n                applicationURL: Yup.string().required('👆 Application URL Required'),\r\n            })}\r\n            onSubmit={async (values, { resetForm }) => {\r\n                putDataIntoDB(values)\r\n                resetForm()\r\n            }}\r\n        >{formik => (\r\n            PageContainer(getContent(formik))\r\n        )}\r\n\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default PostAJobPage;","import { Link } from \"react-router-dom\";\r\nimport PageContainer from \"../PageContainer\";\r\nimport {\r\n    COMPANY_APPLICATION_URL,\r\n    COMPANY_NAME,\r\n    COMPANY_URL,\r\n    JOBS_URL,\r\n    JOB_DESCRIPTION,\r\n    JOB_TITLE\r\n} from \"@constants/\";\r\n\r\nconst JobItemPage = job => {\r\n    const {\r\n        location: {\r\n            state: {\r\n                job: {\r\n                    [JOB_TITLE]: jTitle,\r\n                    [JOB_DESCRIPTION]: jDesc,\r\n                    companies: {\r\n                        [COMPANY_APPLICATION_URL]: cAppUrl,\r\n                        [COMPANY_NAME]: cName\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } = job;\r\n\r\n    const getContent = () => {\r\n        return (\r\n            <div>\r\n                <p>Description: {`${jDesc}`}</p>\r\n                <p>Apply URL: {`${cAppUrl}`}</p>\r\n                <Link to={JOBS_URL}>Back to All Jobs</Link>\r\n                <p>\r\n                    {/*UPDATE THIS URL PATH TO POINT TO COMPANY PAGE*/}\r\n                    <Link to={COMPANY_URL}>More jobs with {`${cName}`}</Link>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        PageContainer(getContent(), jTitle, jDesc)\r\n    )\r\n};\r\n\r\nexport default JobItemPage;\r\n","import {\r\n    ABOUT_URL,\r\n    COMPANIES_URL,\r\n    COMPANY_PAGE_URL,\r\n    JOBS_URL,\r\n    JOB_PAGE_URL,\r\n    POST_A_JOB_URL,\r\n    JOB_TAG_URL\r\n} from \"@constants/\";\r\nimport {\r\n    AboutPage,\r\n    AllCompaniesPage,\r\n    AllJobsPage,\r\n    CompanyPage,\r\n    HomePage,\r\n    NotFoundPage,\r\n    PostAJobPage,\r\n    JobItemPage\r\n} from '@pages/'\r\n\r\nconst routes = [\r\n    {\r\n        path: `${ABOUT_URL}`,\r\n        component: AboutPage\r\n    },\r\n    {\r\n        path: `${COMPANY_PAGE_URL}`,\r\n        component: CompanyPage\r\n    },\r\n    {\r\n        path: `${COMPANIES_URL}`,\r\n        component: AllCompaniesPage\r\n    },\r\n    {\r\n        path: `${POST_A_JOB_URL}`,\r\n        component: PostAJobPage\r\n    },\r\n    {\r\n        path: `${JOB_TAG_URL}`,\r\n        component: AllJobsPage\r\n    },\r\n    {\r\n        path: `${JOB_PAGE_URL}`,\r\n        component: JobItemPage\r\n    },\r\n    {\r\n        path: `${JOBS_URL}`,\r\n        component: AllJobsPage\r\n    },\r\n    {\r\n        path: '/',\r\n        component: HomePage\r\n    },\r\n    // {\r\n    //     path: `${}`,\r\n    //     component: NotFoundPage\r\n    // },\r\n];\r\n\r\nexport default routes;","import { useState } from \"react\";\r\n\r\nexport default function HomePage() {\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const formSubmission = event => {\r\n        event.preventDefault();\r\n        const data = {\r\n            formName: 'formName', formEmail: email, formMessage: 'New Web3 Signup'\r\n        }\r\n\r\n        fetch('https://behcfjv89k.execute-api.us-east-1.amazonaws.com/default/contact', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'X-Api-Key': '0vSWfAWdLV38saVPNuShf9tMNzvHfEgs29PMxU9L'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(result => {\r\n            console.log(result)\r\n            return true;\r\n        }).catch(err => {\r\n            return false;\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"relative overflow-hidden\">\r\n            <main>\r\n                <div className=\"pt-10 bg-gray sm:pt-16 lg:pt-8 lg:pb-14 lg:overflow-hidden\">\r\n                    <div className=\"mx-auto max-w-7xl lg:px-8\">\r\n                        <div className=\"lg:grid lg:grid-cols-2 lg:gap-8\">\r\n                            <div className=\"px-4 sm:max-w-2xl sm:px-6 sm:text-center lg:px-0 lg:text-left \">\r\n                                <div className=\"lg:py-24\">\r\n                                    <h1 className=\"mt-4 text-4xl tracking-tight font-extrabold text-white sm:mt-5 sm:text-6xl lg:mt-6 xl:text-6xl\">\r\n                                        <span className=\"block\">Web3Jobs</span>\r\n                                        <span className=\"block text-indigo-400\">help build the decentralized web</span>\r\n                                    </h1>\r\n                                    <p className=\"mt-3 text-base text-white sm:mt-5 sm:text-xl lg:text-lg xl:text-xl\">\r\n                                        Be part of the future of the web with X,XXX other people 👇\r\n                                    </p>\r\n                                    <div className=\"mt-10 sm:mt-12\">\r\n                                        <form onSubmit={formSubmission} className=\"sm:max-w-xl sm:mx-auto lg:mx-0\">\r\n                                            <div className=\"sm:flex\">\r\n                                                <div className=\"min-w-0 flex-1\">\r\n                                                    <label htmlFor=\"email\" className=\"sr-only\">\r\n                                                        Email address\r\n                                                    </label>\r\n                                                    <input\r\n                                                        id=\"email\"\r\n                                                        type=\"email\"\r\n                                                        placeholder=\"Enter your email\"\r\n                                                        className=\"block w-full px-4 py-3 rounded-md border-0 text-base text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-300 focus:ring-offset-gray-900\"\r\n                                                        onChange={(e) => setEmail(e.target.value)}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"mt-3 sm:mt-0 sm:ml-3\">\r\n                                                    <button\r\n                                                        type=\"submit\"\r\n                                                        className=\"block w-full py-3 px-4 rounded-md shadow bg-indigo-500 text-white font-medium hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-300 focus:ring-offset-gray-900\"\r\n                                                    >\r\n                                                        Sign up for free\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mt-12 sm:-mb-48 lg:m-0 lg:relative\">\r\n                                <div className=\"px-4 sm:max-w-2xl sm:px-6 \">\r\n                                    {/* Illustration taken from Lucid Illustrations: https://lucid.pixsellz.io/ */}\r\n                                    <img\r\n                                        className=\"w-full lg:absolute lg:inset-y-0\"\r\n                                        src=\"https://yhsyqsnormpfxbbippdb.supabase.in/storage/v1/object/public/assets/heroimage.svg\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* More main page content here... */}\r\n            </main>\r\n        </div>\r\n    )\r\n}","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport routes from './config/routes';\r\n\r\nfunction generateRoutes(){\r\n    return routes.map( route => {\r\n        return(\r\n            <Route\r\n                path={route.path}\r\n                component={route.component}\r\n                key={route.path}\r\n            />\r\n        )\r\n    })\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Header />\r\n            <Switch>\r\n                {generateRoutes()}\r\n            </Switch>\r\n            <Footer />\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// React Router\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}